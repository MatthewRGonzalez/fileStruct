?ggthemes
ggthemer('dust')
p + theme_economist()
p + theme_void()
p
?kernels()
p <- ggplot(data=nonpar, aes(x=dbirwt)) +
stat_density(adjust=.25, kernel = "gaussian", alpha = 10, fill = "#58508d" ) +
stat_density(adjust=10,kernel = "triangular", alpha = .8, fill = "#bc5090" ) +
stat_density(adjust=3,geom = "line",kernel = "gaussian", alpha = .8, colour = "#ffa600")
p <- ggplot(data=nonpar, aes(x=dbirwt)) +
stat_density(adjust=.25, kernel = "gaussian", alpha = 10, fill = "#58508d" ) +
stat_density(adjust=1,kernel = "triangular", alpha = .8, fill = "#bc5090" ) +
stat_density(adjust=3,geom = "line",kernel = "gaussian", alpha = .8, colour = "#ffa600")
p <- ggplot(data=nonpar, aes(x=dbirwt)) +
stat_density(adjust=.25, kernel = "gaussian", alpha = 10, fill = "#58508d" ) +
stat_density(adjust=1,kernel = "triangular", alpha = .8, fill = "#bc5090" ) +
stat_density(adjust=3,geom = "line",kernel = "gaussian", alpha = .8, colour = "#ffa600")
p
10
p <- ggplot(data=nonpar, aes(x=dbirwt)) +
stat_density(adjust=.25, kernel = "gaussian", alpha = 10, fill = "#58508d" ) +
stat_density(adjust=10,kernel = "triangular", alpha = .8, fill = "#bc5090" ) +
stat_density(adjust=3,geom = "line",kernel = "gaussian", alpha = .8, colour = "#ffa600")
p
ggplot(nonpar, aes(x=meduc,y=tobacco))+ geom_point()
library(ggplot2)
#Rename for convenience
nonpar <- `pa-pam6090.dta`
ggplot(nonpar, aes(x=meduc,y=tobacco))+ geom_point()
ggplot(nonpar, aes(x=dmeduc,y=tobacco))+ geom_point()
ggplot(nonpar, aes(x=dmeduc,y=tobacco))+ geom_point()
ggplot(nonpar, aes(dmeduc,tobacco))+ geom_point() +
geom_smooth(col="red" , method = "loess", span=0.5)
ggplot(nonpar, aes(dmeduc,tobacco))+ geom_point() +
geom_smooth(col="red" , method = "loess", span=0.5, se = FALSE)
ggplot(nonpar, aes(tobacco,dmeduc))+ geom_point() +
geom_smooth(col="red" , method = "loess", span=0.5, se = FALSE)
ggplot(nonpar, aes(dmeduc,meduc)) +
geom_smooth(col="red" , method = "loess", span=0.5, se = FALSE)
ggplot(nonpar, aes(tobacco,dmeduc)) +
geom_smooth(col="red" , method = "loess", span=0.5, se = FALSE)
ggplot(nonpar, aes(tobacco,dmeduc)) +
ggplot(nonpar, aes(tobacco,dmeduc)) +
geom_smooth(col="red" , method = "loess", span=0.5, se = FALSE)
ggplot(nonpar, aes(tobacco,dmeduc)) +
geom_smooth(col="red" , method = "loess", span=0.5, se = FALSE)
ggplot(nonpar, aes(tobacco,dmeduc)) +
geom_smooth(col="red" , method = "loess", span=1, se = FALSE)
ggplot(nonpar, aes(tobacco,dmeduc)) +
geom_smooth(col="red" , method = "gam", span=1, se = FALSE)
ggplot(nonpar, aes(tobacco,dmeduc)) +
geom_smooth(col="red" , method = "gam", span=.5, se = FALSE)
ggplot(nonpar, aes(tobacco,dmeduc)) +
geom_smooth(col="red" , method = "gam", span=.2, se = FALSE)
ggplot(nonpar, aes(tobacco,dmeduc)) +
geom_smooth(col="red" , method = "gam",se = FALSE)
ggplot(nonpar, aes(as.numeric(tobacco),as.numeric(dmeduc))) +
geom_smooth(col="red" , method = "gam",se = FALSE)
ggplot(nonpar, aes(as.numeric(tobacco),as.numeric(dmeduc)))
ggplot(nonpar, aes(tobacco,dmeduc))
ggplot(nonpar, aes(tobacco,dmeduc)) +
stat_density(adjust-2, kernel = "gaussian")
ggplot(nonpar, aes(tobacco,dmeduc)) +
stat_density(adjust=2, kernel = "gaussian")
ggplot(nonpar, aes(x= tobacco,y = dmeduc)) +
stat_density(adjust=2, kernel = "gaussian")
ggplot(nonpar, aes(x= tobacco,y = dmeduc)) +
stat_density(adjust=3,geom = "line",kernel = "gaussian", alpha = .8, colour = "#ffa600")
ggplot(nonpar, aes(x= tobacco,y = dmeduc)) +
stat_smooth(method = "gam", formula = nonpar$tobacco ~ s(nonpar$dmeduc, k = 1), size = 1)
ggplot(nonpar, aes(x= tobacco)) +
stat_smooth(method = "gam", formula = nonpar$tobacco ~ s(nonpar$dmeduc, k = 1), size = 1)
### D.4
nonpar$dmeduc
ggplot(nonpar, aes(x= tobacco,dmeduc)) +
stat_smooth(method = "gam", formula = nonpar$tobacco ~ s(nonpar$dmeduc, k = 1), size = 1)
ggplot(nonpar, aes(x= tobacco,dmeduc)) +
stat_smooth(method = "gam", formula = nonpar$tobacco ~ s(nonpar$dmeduc, k = 1), size = 1)
ggplot(nonpar, aes(x= tobacco,dmeduc)) +
stat_smooth(method = "gam", formula = nonpar$tobacco ~ s(nonpar$dmeduc2, k = 1), size = 1)
ggplot(nonpar, aes(x= tobacco,dmeduc)) +
stat_smooth(method = "gam", formula = nonpar$tobacco ~ s(nonpar$dmage, k = 1), size = 1)
ggplot(nonpar, aes(x= tobacco,dmeduc)) +
stat_smooth(method = "gam", formula = nonpar$tobacco ~ s(x, k = 1), size = 1)
ggplot(nonpar, aes(x= tobacco,dmeduc)) +
stat_smooth(method = "gam", formula = nonpar$tobacco ~ s(x, k = 2), size = 1)
ggplot(nonpar, aes(x= tobacco,dmeduc)) +
stat_smooth(method = "gam", formula = nonpar$tobacco ~ s(x, k = 3), size = 1)
ggplot(nonpar, aes(x= tobacco,dmeduc)) +
stat_smooth(method = "gam", formula = y ~ s(x, k = 3), size = 1)
ggplot(nonpar, aes(x= tobacco,y= dmeduc)) +
stat_smooth(method = "gam", formula = y ~ s(x, k = 3), size = 1)
ggplot(nonpar, aes(x= tobacco,y= dmeduc)) +
stat_smooth(method = "lm", formula = y ~ s(x, k = 3), size = 1)
ggplot(nonpar, aes(x= tobacco,y= dmeduc)) +
stat_smooth(method = "lm", formula = y ~ x, size = 1)
ggplot(nonpar, aes(x= tobacco,y= dmeduc)) +
stat_smooth(method = "lm", formula = y ~ x, size = 1)
ggplot(nonpar, aes(x= tobacco,y= dmeduc)) +
stat_smooth(method = "lm", formula = y ~ x, size = 2)
ggplot(nonpar, aes(x= tobacco,y= dmeduc)) +
stat_smooth(method = "lm", formula = y ~ x, size = 10)
ggplot(nonpar, aes(x= tobacco,y= dmeduc)) +
stat_smooth(method = "lm", formula = y ~ x)
ggplot(nonpar, aes(x= tobacco,y= dmeduc)) +
stat_smooth(method = "gam", formula = y ~ s(x, k = 3), size = 1)
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
stat_smooth(method = "gam", formula = y ~ s(x, k = 3), size = 1)
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
stat_smooth(method = "gam", formula = y ~ s(x, k = 2), size = 1)
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
stat_density(adjust=.25, kernel = "gaussian", alpha = 10, fill = "#58508d" )
stat_density(adjust=.25, type = "line, kernel = "gaussian", alpha = 10, fill = "#58508d" )
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
stat_density(adjust=.25, type = "line, "kernel = "gaussian", alpha = 10, fill = "#58508d" )
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
stat_density(adjust=.25, type = "line", kernel = "gaussian", alpha = 10, fill = "#58508d" )
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
stat_density(adjust=.25, type = "LINE", kernel = "gaussian", alpha = 10, fill = "#58508d" )
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
stat_density(adjust=.25, kernel = "gaussian", alpha = 10, fill = "#58508d" )
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth(method = "gam", formula = y ~ s(x, k = 2), size = 1)
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth(method = "loess", size = 1)
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth()
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth(span =.5)
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth(span =3)
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth(span =10)
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth(span =100)
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth(span =.3)
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth(span =.1)
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth(span =.001)
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth(span =.001)
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth()
s<- ksmooth(nonpar$dmeduc,nonpar$tobacco, kernel = "normal")
plot(x,y main = "Kern Smooth")
lines(s,lwd=2, col =2)
### D.4
plot.new
s<- ksmooth(nonpar$dmeduc,nonpar$tobacco, kernel = "normal")
plot(x,y main = "Kern Smooth")
plot(x,y, main = "Kern Smooth")
plot(nonpar$dmeduc,nonpar$tobacco, main = "Kern Smooth")
lines(s,lwd=2, col =2)
s<- ksmooth(nonpar$dmeduc,nonpar$tobacco, kernel = "normal", bandwidth = 2)
plot(nonpar$dmeduc,nonpar$tobacco, main = "Kern Smooth")
lines(s,lwd=2, col =2)
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth()
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth() +
geom_jitter()
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth() +
geom_jitter(aes(color=nonpar$foreignb))
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth(color="blue") +
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth(color="blue")
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth(color="blue")
ggplot(nonpar, aes(x= dmeduc,y= tobacco)) +
geom_smooth(color="red")
ggplot(nonpar, aes(x= dmeduc,y= cigar)) +
geom_smooth(color="red")
s<- ksmooth(nonpar$dmeduc,nonpar$cigar, kernel = "normal", bandwidth = 2)
### D.4
plot.new
s<- ksmooth(nonpar$dmeduc,nonpar$tobacco, kernel = "normal", bandwidth = 2)
plot(nonpar$dmeduc,nonpar$tobacco, main = "Kern Smooth")
lines(s,lwd=2, col =2)
plot.new
s<- ksmooth(nonpar$dmeduc,nonpar$cigar, kernel = "normal", bandwidth = 2)
plot(nonpar$dmeduc,nonpar$cigar, main = "Kern Smooth")
lines(s,lwd=2, col =2)
plot.new
s<- ksmooth(nonpar$dmeduc,nonpar$cigar, kernel = "normal", bandwidth = 2)
plot(nonpar$dmeduc,nonpar$cigar, main = "Kern Smooth")
lines(s,lwd=2, col =2)
plot.new
s<- ksmooth(nonpar$dmeduc,nonpar$cigar, kernel = "normal", bandwidth = 2)
plot(nonpar$dmeduc,nonpar$cigar, main = "Kern Smooth")
lines(s,lwd=2, col =2)
s<- ksmooth(nonpar$dmeduc,nonpar$cigar, kernel = "normal", bandwidth = 2)
plot(nonpar$dmeduc,nonpar$cigar, main = "Kern Smooth")
lines(s,lwd=2, col =2)
ggplot(nonpar, aes(x= cigar,y=dmeduc)) +
geom_smooth(color="red")
install.packages("geojsonio")
install.packages("broom")
install.packages("evaluate")
# Let's read the jeoJson file that is stored on the web with the geojsonio library:
library(geojsonio)
spdf <- geojson_read("https://raw.githubusercontent.com/gregoiredavid/france-geojson/master/communes.geojson",  what = "sp")
# Select only the region #6
spdf@data$mystate = substr( spdf@data$code, 1, 2)
spdf_region_6 = spdf[ spdf@data$mystate == "06" , ]
# plot the selected are with sp
library(sp)
par(mar=c(0,0,0,0))
plot(spdf_region_6, col="grey")
library(broom)
spdf_fortified <- tidy(spdf_region_6)
# Plot it
library(ggplot2)
ggplot() +
geom_polygon(data = spdf_fortified, aes( x = long, y = lat, group = group), fill="#69b3a2", color="white") +
theme_void() +
coord_map()
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
rm(list=ls())
library(geojsonio)
library(geojsonio)
spdf <- geojson_read("downloads/ign_spanish_adm3_municipalities.geojson",  what = "sp")
df <- read.csv("/Users/matthew/Downloads/data-YNa3Z.csv")
### Andalusia
coastal_spain<- spdf[spdf@data$codnut2 == "ES61", ]
library(broom)
coastal_spdf_fortified <- tidy(coastal_spain, region = "nameunit")
library(dplyr)
coastal_spdf_fortified = coastal_spdf_fortified %>%
left_join(. ,df, by = c("id" = "Lugar.de.residencia"))
library(ggplot2)
ggplot() +
geom_polygon(data = coastal_spdf_fortified, aes(fill =Fallecidos.acum., x = long, y = lat, group = group)) +
theme_void() +
coord_map()
rm(list=ls())
library(geojsonio)
spdf <- geojson_read("/Users/matthew/Downloads/ign_spanish_adm3_municipalities.geojson",  what = "sp")
spain <- map_data("world") %>%
filter(region=="Spain")
data <- world.cities %>% filter(country.etc=="Spain")
library(dplyr)
library(maps)
spain <- map_data("world") %>%
filter(region=="Spain")
library(maps)
spain <- map_data("world") %>%
filter(region=="Spain")
library(maps)
spain <- map_data("world") %>%
filter(region=="Spain")
data <- world.cities %>% filter(country.etc=="Spain")
spain <- map_data("world") %>%
filter(region=="Spain")
spain <- map_data("world") %>%
filter(region=="Spain")
spain <- map_data("world") %>%
filter(region=="Spain")
rm(list=ls())
library(geojsonio)
library(dplyr)
library(maps)
spain <- map_data("world") %>%
filter(region=="Spain")
spain <- map_data("world") %>%filter(region=="Spain")
library(ggmap)
library(ggplot2)
spain <- map_data("world") %>% filter(region=="Spain")
data <- world.cities %>% filter(country.etc=="Spain")
ggplot() +
geom_polygon(data = spain, aes(x=long, y = lat, group = group), fill="dark grey", alpha=0.3) +
geom_point(data=data, aes(x=long, y=lat)) +
theme_void() + coord_map()
spdf <- geojson_read("/Users/matthew/Downloads/ign_spanish_adm3_municipalities.geojson",  what = "sp")
coastal_spain<- spdf[spdf@data$codnut2 == "ES61", ]
library(broom)
coastal_spdf_fortified <- tidy(coastal_spain, region = "nameunit")
ggplot() +
geom_polygon(data = coastal_spdf_fortified, aes(x = long, y = lat, group = group), fill = "white", color="grey") +
geom_point(data=data, aes(x=long, y=lat)) +
theme_void() +
coord_map()
head(data$country.etc)
head(data)
spain_muni <- map_data(map = "Spain")
spain_muni <- map_data(map = "spain")
map_data
?map_data
library(maps)
spain_muni <- map_data(map = spain)
spain_muni <- map_data(map = maps::spain())
install.packages("rnaturalearth")
library(rnaturalearth)
spain2 <- ne_states(country = "spain", returnclass = "sf")
library(rnaturalearth)
spain2 <- ne_states(country = "spain", returnclass = "sf")
library("rnaturalearth")
spain2 <- ne_states(country = "spain", returnclass = "sf")
install.packages("rnaturalearthhires", repos = "http://packages.ropensci.org", type = "source")
install.packages("rnaturalearthhires", repos = "http://packages.ropensci.org", type = "source")
rm(list=ls())
getwd()
setwd("/Users/matthew/Desktop/")
devtools::install_github("https://github.com/MatthewRGonzalez/fileStruct")
fileStruct::createFullProject("newp")
library(datasets)
df <- mtcars
export(df)
knitr::opts_chunk$set(echo = TRUE)
sys.source(paste(paste(getwd(),'/analysis/scripts/script1.R', sep = '')))
library(here)
here
here()
here()
here(),analysis/scripts/script1.R
here(analysis/scripts/script1.R)
here
here()
sys.source(here("analysis/scripts/script1.R"))
df <- datasets::mtcars
sys.source(here("analysis/scripts/script1.R"))
library(here)
sys.source(here("analysis/scripts/script1.R"))
df <- datasets::mtcars
library(here)
sys.source(here("analysis/scripts/script1.R"))
head(mtcars)
ggplot2::ggplot(data =df, ggplot2::aes(x = wt, y = mpg))+
ggplot2::geom_point()
library(here)
sys.source(here("analysis/scripts/script1.R"))
library(here)
sys.source(here("analysis/scripts/script1.R"))
library(here)
sys.source(here("analysis/scripts/script1.R"))
library(here)
sys.source(here("analysis/scripts/script1.R"))
library(here)
library(here)
library(ggplot2)
sys.source(here("analysis/scripts/script1.R"))
ggsave(here("analysis/results/figures"),p)
here("analysis/results/figures"
here("analysis/results/figures"
here("analysis/results/figures")
ggsave(here("analysis/results/figures"),p)
sys.source(here("analysis/scripts/script1.R"))
ggsave(here("analysis/results/figures"),p)
a <- sys.source(here("analysis/scripts/script1.R"))
ggsave(here("analysis/results/figures"),a)
a
print(a)
a <- sys.source(here("analysis/scripts/script1.R"))
p
ggsave(here("analysis/results/figures"),p)
a <- sys.source(here("analysis/scripts/script1.R"))
ggsave(here("analysis/results/figures"),p)
ggsave(here("analysis/results/figures"),p)
ggsave(filename = "scatter",path = here("analysis/results/figures"),plot = p)
ggsave(p)
p <- ggplot2::ggplot(data =df, ggplot2::aes(x = wt, y = mpg))+
ggplot2::geom_point()
ggsave(filename = "scatter",path = here("analysis/results/figures"),plot = p)
ggsave(p)
p
ggsave(filename = "scatter",path = here("analysis/results/figures"),plot = p, device = "pdf")
sys.source(here("analysis/scripts/script1.R"))
ggsave(filename = "scatter",path = here("analysis/results/figures"),plot = p, device = "pdf")
ggsave(filename = "scatter",path = here("analysis/results/figures"),plot = p, device = "png")
ggsave(filename = "scatter.png",path = here("analysis/results/figures"),plot = p, device = "png")
rm(list=ls())
fileStruct::createFullProject("demo")
knitr::opts_chunk$set(echo = TRUE)
sys.source(paste(paste(getwd(),'/analysis/scripts/script1.R', sep = '')))
?fileStruct
?fileStruct::createFullProject
sys.source('./analysis/scripts/script1.R', sep = '')))
sys.source('./analysis/scripts/script1.R', sep = '')
sys.source('./analysis/scripts/script1.R')
#' fileStruct: A package for developing reproducable project structures
#'
#' The fileStruct package provides one main function, with some additional "helper"
#' functions for creating an organized workflows.
#'
#'
#' @section The fileStruct() function:
#' createFullProject() is the most important function here, and creates a file structure
#' based on the following link: https://julianreif.com/guide/
#'
#' Simply set a directory and run the function with your desired project name to
#' create a clean and efficient project structure.
#'
#'
#'
#' @docType package
#' @name fileStruct
NULL
#' projectCreate:
#'
#' @param name A character string
#' @return an r.proj of name "name"
#' @examples
#' projectCreate("My first project")
#' @export
projectCreate<- function(name){
# Initialize R project
readr::write_file(
"Version: 1.0
RestoreWorkspace: Default
SaveWorkspace: Default
AlwaysSaveHistory: Default
EnableCodeIndexing: Yes
UseSpacesForTab: Yes
NumSpacesForTab: 2
Encoding: UTF-8
RnwWeave: Sweave
LaTeX: pdfLaTeX,", path = paste(name,".txt", sep = ""))
path <- paste(name,"/", sep = "")
file.rename(paste(name, ".txt", sep =''), paste(path,name,".rproj", sep = ""))
}
#' createSubdirectories:
#'
#' @param name A character string
#' @return a directory structure based on https://julianreif.com/guide/
#' @examples
#' createSubdirectories("My first project")
#' @export
createSubdirectories<- function(name){
print(paste("Creating subdirectories for the following project:", name))
dir.create(paste(name,"/", sep = ""))
dir.create(paste(name,"/analysis/data", sep = ""), recursive = TRUE)
dir.create(paste(name,"/analysis/processed", sep = ""), recursive = TRUE)
dir.create(paste(name,"/analysis/results/figures", sep = ""), recursive = TRUE)
dir.create(paste(name,"/analysis/results/tables", sep = ""), recursive = TRUE)
dir.create(paste(name,"/analysis/scripts/libraries/R", sep = ""), recursive = TRUE)
dir.create(paste(name,"/paper/figures", sep = ""), recursive = TRUE)
dir.create(paste(name,"/paper/tables", sep = ""), recursive = TRUE)
}
#' scriptCreate:
#'
#' @param name A character string
#' @return a simple .R script in analysis/scripts
#' @examples
#' scriptCreate("My first project")
#' @export
scriptCreate <- function(name){
script_path <- paste(paste(getwd(),"/",name,"/analysis/scripts/script1.R", sep = ""))
readr::write_file("print(paste('Hello Project Creation!'))",
path = script_path )
}
#' fileMasterCreate:
#' create a .R script for sourcing example
#'
#' @param name A character string
#' @return a master .Rmd file for sourcing scripts
#' @examples
#' fileMasterCreate("My first project")
#' @export
fileMasterCreate <- function(name){
readr::write_file(paste(
"---
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
author_param <- ", "'",Sys.info()[["user"]],"'","\n",
"date_param <-", "'",date(),"'", "\n","title_param<-", '"',name, '"',
"\n```
```
---
title: `r title_param`
author: `r author_param`
date:  `r date_param`
---
# .Rmd master file
## Setup/Titles:
This first section of code initializes the Rmd document for knitting.
- Default output is html_document
- Author based on system user
- Title is created by fileStructure::createFullProject()
## Idea
This file can be used to source different modules throughout the project.
Run the example below!
```{r source 1}
sys.source(sys.source('./analysis/scripts/script1.R')
```
"
), path = paste(getwd(),"/",name,"/master.rmd", sep = ""))
}
#' createFullProject:
#' THE MOST IMPORTANT FUNCTION
#'
#' @param name A character string
#' @return An entire project directory structure
#' @examples
#' crearteFullProject("My first project")
#' @export
createFullProject <- function(name){
createSubdirectories(name)
scriptCreate(name)
fileMasterCreate(name)
projectCreate(name)
}
setwd("/Users/matthew/Documents/Programming/Repos/fileStruct/")
devtools::install()
devtools::document()
